@model Ecommerce_MVC_project.Models.Product

@{
    ViewData["Title"] = Model.Name;
}

<!DOCTYPE html>
<html lang="en" data-bs-theme="dark">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - ProStore</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" xintegrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" xintegrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <style>
        :root {
            --primary-color: #FFFFFF;
            --dark-bg: #0A0A0A;
            --content-bg: #111111;
            --card-bg: #181818;
            --border-color: #2a2a2a;
            --text-color: #EAEAEA;
            --text-secondary: #888888;
            --success-color: #22c55e;
            --warning-bg: #452c12;
            --warning-border: #b45309;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--dark-bg);
            color: var(--text-color);
            min-height: 100vh;
        }

        .product-image-gallery {
            background-color: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 12px;
            padding: 2rem;
        }

            .product-image-gallery img {
                width: 100%;
                max-height: 500px;
                object-fit: contain;
                border-radius: 8px;
            }

        .product-details h1 {
            font-weight: 800;
            font-size: 2.5rem;
        }

        .product-meta .badge {
            background-color: var(--content-bg);
            color: var(--text-secondary);
            font-weight: 500;
            border: 1px solid var(--border-color);
        }

        .product-meta .brand-link {
            color: var(--text-secondary);
            text-decoration: none;
            font-weight: 500;
        }

            .product-meta .brand-link:hover {
                color: var(--primary-color);
            }

        .product-price {
            font-size: 2.75rem;
            font-weight: 700;
            color: var(--primary-color);
        }

        .spec-table {
            font-size: 0.95rem;
        }

            .spec-table th {
                color: var(--text-secondary);
                font-weight: 500;
                border-bottom: 1px solid var(--border-color);
            }

            .spec-table td {
                font-weight: 600;
                border-bottom: 1px solid var(--border-color);
            }

        .quantity-input {
            background-color: var(--content-bg);
            border: 1px solid var(--border-color);
            color: var(--text-color);
            border-radius: 8px;
            text-align: center;
            max-width: 70px;
        }

        .btn-primary {
            background-color: var(--primary-color);
            color: var(--dark-bg);
            border-color: var(--primary-color);
            border-radius: 8px;
            font-weight: 600;
            padding: 0.8rem 1.5rem;
            transition: background-color 0.2s ease, transform 0.2s ease;
        }

            .btn-primary:hover {
                background-color: #d9d9d9;
                border-color: #d9d9d9;
                transform: translateY(-2px);
            }

        .alert-warning {
            background-color: var(--warning-bg);
            border-color: var(--warning-border);
        }
    </style>
</head>
<body>
    <div class="container my-5">
        <div class="row g-5">
            <div class="col-lg-6">
                <div class="product-image-gallery">
                    <img src="@Model.ImagePath" alt="@Model.Name" />
                </div>
            </div>

            <div class="col-lg-6 product-details">
                <div class="product-meta mb-2">
                    <span class="badge me-2">@Model.Category.Name</span>
                    <a href="#" class="brand-link">by @Model.Brand.Name</a>
                </div>

                <h1>@Model.Name</h1>
                <p class="lead text-secondary">@Model.Description</p>
                <div class="my-4 product-price">@Model.Price.ToString("C")</div>

                <div class="mt-4">
                    @if (Model.Stock > 0)
                    {
                        int quantityInCart = ViewBag.QuantityInCart ?? 0;
                        int maxAllowedToAdd = Model.Stock - quantityInCart;

                        if (maxAllowedToAdd > 0)
                        {
                            <form asp-controller="Cart" asp-action="AddToCart" method="post">
                                <input type="hidden" name="productId" value="@Model.Id" />
                                <div class="input-group" style="max-width: 350px;">
                                    <input type="number" name="quantity" value="1" min="1" max="@maxAllowedToAdd" class="form-control form-control-lg quantity-input" />
                                    <button type="submit" class="btn btn-lg btn-primary flex-grow-1">
                                        <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                                    </button>
                                </div>
                            </form>

                            if (quantityInCart > 0)
                            {
                                <div class="form-text mt-2" style="color: var(--success-color);">
                                    You have @quantityInCart unit(s) in your cart. You can add up to @maxAllowedToAdd more.
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                All available stock (@Model.Stock units) is in your cart. Manage your cart <a asp-controller="Cart" asp-action="Index">here</a>.
                            </div>
                        }
                    }
                    else
                    {
                        <button class="btn btn-lg btn-danger" disabled>Out of Stock</button>
                    }
                </div>

                <hr class="my-4" style="border-color: var(--border-color);" />

                <h5 class="mb-3">Specifications</h5>
                <table class="table table-borderless spec-table">
                    <tbody>
                        <tr>
                            <th scope="row" style="width: 30%;">Availability</th>
                            <td>@Model.Stock units in stock</td>
                        </tr>
                        @if (!string.IsNullOrEmpty(Model.Color))
                        {
                            <tr><th scope="row">Color</th><td>@Model.Color</td></tr>
                        }
                        @if (!string.IsNullOrEmpty(Model.Size))
                        {
                            <tr><th scope="row">Size</th><td>@Model.Size</td></tr>
                        }
                        @if (!string.IsNullOrEmpty(Model.Weight))
                        {
                            <tr><th scope="row">Weight</th><td>@Model.Weight</td></tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3500,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            },
                            background: 'var(--card-bg)',
                            color: 'var(--text-color)'
                        });
                        Toast.fire({
                            icon: 'success',
                            title: '@Html.Raw(TempData["SuccessMessage"])'
                        });
                </text>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <text>
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 5000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            },
                            background: 'var(--card-bg)',
                            color: 'var(--text-color)'
                        });
                        Toast.fire({
                            icon: 'error',
                            title: '@Html.Raw(TempData["ErrorMessage"])'
                        });
                </text>
            }
            });
        </script>
    }
</body>
</html>
